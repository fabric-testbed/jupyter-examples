#Creating Prometheus and ELK snapshot 

# Reference URL:
https://www.robustperception.io/taking-snapshots-of-prometheus-data/
https://www.elastic.co/guide/en/elasticsearch/reference/7.17/snapshot-restore-apis.html
https://medium.com/linux-point/how-to-create-snapshots-of-elasticsearch-cluster-data-and-restore-e23b2d0c0752

##############
Pre-Work:
AFTER calling mf = MFLib(slice_name) in the instrumentize notebook and BEFORE calling instrumetize_results = mf.instrumentize( ["prometheus"] ) and instrumetize_results = mf.instrumentize( ["elk"] )

for prometheus:
Go to /home/mfuser/mf_git/instrumentize/prometheus/ansible/roles/common/tasks/Prometheus/prometheus_container_tasks.yml
(1) add - '--web.enable-admin-api' in the command section

for elk:
Go to /home/mfuser/mf_git/instrumentize/elk/docker-images/elk/docker-compose.yml
(1)add "- path.repo=/usr/share/elasticsearch/backup" to the "environment" section of each es(es01,es02,es03)
(2)add "- snapshotbackup:/usr/share/elasticsearch/backup" to the "volumes" section of each es(es01, es02, es03)
(3)at the end of the .yml file in the "volumes" section, add "snapshotbackup" as driver: local below data01-data03

Go to /home/mfuser/mf_git/instrumentize/elk/docker-images/elk/elasticsearch/config/elasticsearch.yml , add "path.repo: ["/usr/share/elasticsearch/backup"]" at the end.

Then run instrumetize_results = mf.instrumentize( ["prometheus"] ) in the notebook
Then run instrumetize_results = mf.instrumentize( ["elk"] ) in the notebook.